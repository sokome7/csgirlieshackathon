body {
    font-family: 'Press Start 2P', cursive; /* A retro-style font would be great! */
    background-color: #1a1a1a;
    color: #00ff00; /* Neon green for that classic glitch feel */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    overflow: hidden; /* Hide overflow from glitch effects */
    text-align: center;
}

.container {
    background-color: #333;
    border: 2px solid #00ff00;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    max-width: 600px;
    width: 90%;
}

h1 {
    font-size: 1.8em;
    margin-bottom: 15px;
    text-shadow: 2px 2px #ff00ff; /* Magenta shadow */
}

.compliment-display {
    position: relative;
    width: 100%;
    max-width: 400px;
    height: 300px; /* Fixed height for consistent layout */
    background-color: #000;
    border: 1px dashed #00ff00;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Crucial for clip-path effects */
}

#memeImage {
    width: 100%;
    height: 100%;
    object-fit: contain; /* Ensure image fits without cropping */
    filter: grayscale(50%); /* Subtle initial glitch */
    transition: filter 0.1s linear;
}

/* Glitch effect for image */
#memeImage.glitch-active {
    animation: image-glitch 0.2s steps(2, end) infinite alternate;
}

@keyframes image-glitch {
    0% {
        transform: translate(0, 0);
        filter: hue-rotate(0deg) grayscale(50%);
    }
    25% {
        transform: translate(2px, -2px);
        filter: hue-rotate(90deg) grayscale(70%);
    }
    50% {
        transform: translate(-3px, 3px);
        filter: hue-rotate(180deg) grayscale(30%);
    }
    75% {
        transform: translate(1px, -1px);
        filter: hue-rotate(270deg) grayscale(80%);
    }
    100% {
        transform: translate(-2px, 2px);
        filter: hue-rotate(360deg) grayscale(50%);
    }
}


/* Glitch effect for text */
.glitch {
    font-size: 1.2em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #00ff00;
    text-shadow: 0 0 5px #00ff00;
    white-space: normal; /* Allow text to wrap */
    word-wrap: break-word; /* Break long words */
    padding: 10px;
    box-sizing: border-box;
    width: 90%; /* Ensure text stays within bounds */
    line-height: 1.3;
    opacity: 1; /* Default state */
    transition: opacity 0.1s linear;
}

.glitch::before,
.glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #1a1a1a; /* Match body background to hide original text */
    overflow: hidden;
    color: #ff00ff; /* Magenta for one layer */
    text-shadow: -2px 0 #ff00ff;
    transition: all 0.1s linear;
}

.glitch::after {
    color: #00ffff; /* Cyan for the other layer */
    text-shadow: 2px 0 #00ffff;
}

/* Active glitch animation */
.glitch.glitch-active::before {
    animation: glitch-anim-1 0.2s steps(2, end) infinite alternate;
}

.glitch.glitch-active::after {
    animation: glitch-anim-2 0.2s steps(2, end) infinite alternate;
}

/* Keyframe animations for text glitch */
@keyframes glitch-anim-1 {
    0% {
        clip-path: inset(40% 0 61% 0);
        transform: translate(-50%, -50%) translateX(5px);
    }
    20% {
        clip-path: inset(92% 0 1% 0);
        transform: translate(-50%, -50%) translateX(-3px);
    }
    40% {
        clip-path: inset(43% 0 1% 0);
        transform: translate(-50%, -50%) translateX(2px);
    }
    60% {
        clip-path: inset(25% 0 58% 0);
        transform: translate(-50%, -50%) translateX(-4px);
    }
    80% {
        clip-path: inset(80% 0 10% 0);
        transform: translate(-50%, -50%) translateX(1px);
    }
    100% {
        clip-path: inset(0 0 0 0);
        transform: translate(-50%, -50%) translateX(0);
    }
}

@keyframes glitch-anim-2 {
    0% {
        clip-path: inset(20% 0 70% 0);
        transform: translate(-50%, -50%) translateX(-5px);
    }
    20% {
        clip-path: inset(10% 0 80% 0);
        transform: translate(-50%, -50%) translateX(3px);
    }
    40% {
        clip-path: inset(60% 0 30% 0);
        transform: translate(-50%, -50%) translateX(-2px);
    }
    60% {
        clip-path: inset(5% 0 85% 0);
        transform: translate(-50%, -50%) translateX(4px);
    }
    80% {
        clip-path: inset(70% 0 20% 0);
        transform: translate(-50%, -50%) translateX(-1px);
    }
    100% {
        clip-path: inset(0 0 0 0);
        transform: translate(-50%, -50%) translateX(0);
    }
}

button {
    background-color: #ff00ff; /* Magenta button */
    color: #1a1a1a;
    border: 2px solid #00ff00;
    padding: 15px 30px;
    font-size: 1.1em;
    cursor: pointer;
    border-radius: 5px;
    transition: all 0.2s ease-in-out;
    font-family: 'Press Start 2P', cursive;
    text-transform: uppercase;
    box-shadow: 0 0 10px rgba(255, 0, 255, 0.5);
}

button:hover {
    background-color: #00ff00; /* Green on hover */
    color: #1a1a1a;
    box-shadow: 0 0 15px rgba(0, 255, 0, 0.7);
    transform: scale(1.05);
}

button:active {
    transform: scale(0.95);
    box-shadow: 0 0 5px rgba(0, 255, 0, 0.3);
}

/* Optional: Add a retro font import */
@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');